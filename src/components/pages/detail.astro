---
import Layout from '@/layouts/PageLayout.astro';
import { render, type CollectionEntry } from 'astro:content';
import FloatBtns from '@hdud/common/components/FloatBtns.astro';
import MemberGrid from '@/components/common/MemberGrid.astro';
import getWorks from '@/lib/getWorks.ts';
import { getI18n } from '@/i18n/index';
import { getRelativeLocaleUrl } from 'astro:i18n';
import { siteConfig } from '@/site.config';

// ✅ Tip correcto de colección
type Work = CollectionEntry<'imageInfo'>;

const { work } = Astro.props as { work: Work };

const { currentLocale } = Astro;
const locale = currentLocale ?? 'es';
const i18n = await getI18n(locale, 'design');

const meta = {
  title: i18n('page_works.title', { name: work.id }),
  description: i18n('mate.description'),
  author: siteConfig.author,
  email: siteConfig.email,
  local: locale,
  ogImage: getRelativeLocaleUrl(locale, '/og-image/site-image.png'),
};

// ✅ Tipamos la respuesta
const works = await getWorks();

// Ensure works is an array
const worksArray: Work[] = Array.isArray(works) ? works : [works];

// ✅ Render seguro y tipado
const { Content } = await render(work);

// ✅ Tipado correcto en la búsqueda
const currentIdx = worksArray.findIndex((it: Work) => it.id === work.id);
let preIdx = currentIdx - 1, nextIdx = currentIdx + 1;
if (preIdx < 0) preIdx = worksArray.length - 1;
if (nextIdx >= worksArray.length) nextIdx = 0;
---

<Layout {...meta}>
  <div class="w-full px-4">
    <Content />
  </div>

  <FloatBtns btns={[
    {
      type: 'link',
      href: `/${worksArray[preIdx].id}`,
      icon: 'icon-[ooui--arrow-previous-ltr]',
      label: i18n('page_detail.prev'),
    },
    {
      type: 'link',
      href: `/${worksArray[nextIdx].id}`,
      icon: 'icon-[ooui--arrow-previous-rtl]',
      label: i18n('page_detail.next'),
    },
    {
      type: 'theme',
      props: { themes: siteConfig.themes },
    },
    {
      type: 'top',
      label: i18n('btns.backToTop'),
    }
  ]} />
      label: i18n('btns.backToTop'),
    }
  ]} />
</Layout>
